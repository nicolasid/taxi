<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />
    <title>Dynamic Taxi Surcharge</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.34.0/mapbox-gl.js'></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://api.tiles.mapbox.com/mapbox-gl-js/v0.34.0/mapbox-gl.css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" />
    <style>
        body { margin:0; padding:0; }
        #map { 
          position:absolute; left:30%; width:70%; height: 100%;
        }
    </style>
</head>
<body>
    <div style="position:absolute; width:30%; left:1%; top:0%">
        <div><h3>Dynamic Taxi Surcharge</h3></div>
        <form id="routeParam" method="post" autocomplete="off" class="form-group row">
            <div>
                <label class="col-lg-5 col-form-label">Available Taxi</label>
                <label id="taxiAvailable" class="col-lg-7 col-form-label">0</label>
            </div>
            <div>
                <label class="col-lg-5 col-form-label">Passenger Arrived</label>
                <label id="passengerArrived" class="col-lg-7 col-form-label">0</label>
            </div>
            <div>
                <label class="col-lg-5 col-form-label">Nb Flight Arrived</label>
                <label id="flightArrived" class="col-lg-7 col-form-label">0</label>
            </div>
            <div>
                <label class="col-lg-5 col-form-label">Flight Codes</label>
                <label id="flightCodes" class="col-lg-7 col-form-label">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>
            </div>
            <div class="col-lg-5 col-form-label">
                <label>Weather Effect</label>
            </div>
            <div class="col-lg-7" style="top:5px;" id="weather">
            </div>
        </form>
    </div>
    <div style="position:absolute; width:24%; left:1%; top:35%" class="row show-grid">
        <div>
            <label class="col-lg-6 col-label">Taxi Surcharge</label>
            <h3><label class="col-lg-6 col-form-label">$<span id="surcharge">0</span></label></h3>
        </div>
        <div class="col-lg-8" style="top:10px;">
            <button id="toggle" type="button" class="btn btn-primary" data-toggle="button" aria-pressed="false">
              Start
            </button>
        </div>
    </div>
    <div style="position:absolute; bottom:5%; left:1%;">&copy; <a href='/about' target='_blank'>EB5301 Team 16</a></div>

    <div id='map'></div>

    <script>
        // initial point where it is not shown
        /* var initAirplane = [
                    [103.992153, 1.390916],
                    [103.996153, 1.390916],
                    [103.996153, 1.386916],
                    [103.992153, 1.386916]
                    ];
        */
        // define initial location of the airplane
        var initAirplane = [
                    [103.990953, 1.388036],
                    [103.994953, 1.388036],
                    [103.994953, 1.384036],
                    [103.990953, 1.384036]
                    ];

        // Initialize map that will used as the main map
        // The source and layer will be updated later when query form is submitted
        var newMap = initMap();
        newMap.on('load', function () {
            
            newMap.addSource('taxi_point', {
                "type": "geojson",
                "data": {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": []
                    }
                }
            });

            newMap.addLayer({
                "id": "taxi_point",
                "source": "taxi_point",
                "type": "circle",
                "paint": {
                    "circle-radius": 3,
                    "circle-color": "#007cbf"
                }
            });
        });

        function initMap() {
            mapboxgl.accessToken = 'pk.eyJ1IjoibmFuZHJlcyIsImEiOiJjaXppOXVzb3owMjhsMnhvd2NxcnFnbnQwIn0.cWoD_5IF6wVH5exUjmmK4w';
            var aMap = new mapboxgl.Map({
                container: 'map',
                style: 'mapbox://styles/mapbox/streets-v9',
                // the center is changi airport
                center: [103.987222,1.354193],
                zoom: 13.2
            });
            return aMap;
        };

        function startTaxi() {
            var offset = 0;
            animationHandler = setInterval(function() {
                newMap.getSource('taxi_point').setData({
                  "type": "Feature",
                  "geometry": {
                      "type": "Point",
                      "coordinates": [103.987222 + offset,1.354193 + offset]
                  }
                });
                offset = offset + 0.001;
            }, 1000);
        };

        function stopAnimation() {
            clearInterval(timer);
        };

        // main handler of animation
        var animationHandler;
        var counter = 1;
        $('#toggle').on('click', function () {
            // if there is class active when the button toggle is clicked, then stop animation
            // this means the button is clicked while the animation is running and thus the animation should be stopped
            if ($(this).hasClass('active')) {
                $(this).text("Start");
                clearInterval(animationHandler);
            } else {
                $(this).text("Stop");
                animate();
                animationHandler = setInterval(function() {
                    animate();
                }, 5000);
            }
        });

        function animate() {
            $.ajax({
                url: "/getSurchargeData",
                type: "get",
                data: { c : counter},
                success: function(result){
                    var res = result.split(",");
                    $('#taxiAvailable').text(Math.floor(parseInt(res[3])/4));
                    $('#passengerArrived').text(res[4]);
                    var flightCodes = res[5].split("|")
                    animateAirplane();
                    $('#flightArrived').text(flightCodes.length);
                    var flightCodesStr = ", ....";
                    if (flightCodes.length > 4) {
                        flightCodesStr = flightCodes.slice(0,3).toString() + flightCodesStr;
                    } else {
                        flightCodesStr = flightCodes.toString();
                    }
                    $('#flightCodes').text(flightCodesStr);
                    // update weather
                    updateRainEffect(parseInt(res[6]));
                    $('#surcharge').text(res[7]);
                }
            });
            counter = counter + 1;
            if (counter > 20) {
                counter = 1;
            }
            $.ajax({
                url: "/static/taxi1.json",
                type: "get",
                data: { c : counter},
                success: function(result){
                    newMap.getSource('taxi_point').setData("http://localhost:8080/static/taxi" + counter + ".json");
                }
            });
        }
        var planeCounter = 0;
        // Animate airplane arrival
        function animateAirplane() {
            planeCounter = planeCounter + 1;
            var planeId = "plane" + planeCounter;
            newMap.addSource(planeId, {
                "type": "image",
                "url": "static/airplane.png",
                "coordinates": initAirplane
            });
            newMap.addLayer({
                "id": planeId,
                "source": planeId,
                "type": "raster",
                "visibility": "none",
                "paint": {
                    "raster-opacity": 1
                }
            });

            var vOffset = 0;
            var hOffset = 0;
            var maxVOffset = 0.01824;
            var maxHOffset = 0.0076;
            var shift = 0.0004;
            var ratio = 2.4; // vertical vs. horizontal

            var planeHandler = setInterval(function() {
                newMap.getSource(planeId).setCoordinates(
                [
                    [initAirplane[0][0] - hOffset, initAirplane[0][1] - vOffset],
                    [initAirplane[1][0] - hOffset, initAirplane[1][1] - vOffset],
                    [initAirplane[2][0] - hOffset, initAirplane[2][1] - vOffset],
                    [initAirplane[3][0] - hOffset, initAirplane[3][1] - vOffset]
                ]);
                hOffset = hOffset + shift;
                vOffset = vOffset + (shift * ratio);
                // stop animation if the plane reach the max
                if ((vOffset > maxVOffset) || (hOffset > maxHOffset)) {
                    newMap.removeLayer(planeId);
                    clearInterval(planeHandler);
                };
            }, 200);
        }

        function updateRainEffect(nbRain) {
            var weather = document.getElementById("weather")
            weather.innerHTML = "";
            var nbSunny = 4 - nbRain;
            for (i = 0; i < nbRain; i++) {
                weather.appendChild(createNewImgElement("/static/raining.jpeg"));
            }
            for (i = 0; i < nbSunny; i++) {
                weather.appendChild(createNewImgElement("/static/sunny.png"));
            }
        }

        function createNewImgElement(source) {
            var elem = document.createElement("img");
            elem.setAttribute("height", "33px");
            elem.setAttribute("width", "36px");
            elem.src = source;
            return elem;
        }
    </script>

</body>
</html>
